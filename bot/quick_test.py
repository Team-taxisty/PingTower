#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π PingTower
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python quick_test.py
"""

import requests
import json
import time
import sys

def test_python_bot():
    """–¢–µ—Å—Ç Python –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Python –±–æ—Ç–∞...")
    
    url = "http://localhost:5000/send_notification"
    data = {
        "username": "testuser",
        "service_name": "Quick Test Service",
        "service_url": "https://example.com",
        "status": "down",
        "message": "üö® –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç - —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
    }
    
    try:
        response = requests.post(url, json=data, timeout=5)
        if response.status_code == 200:
            print("‚úÖ Python –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print(f"‚ùå Python –±–æ—Ç –æ—à–∏–±–∫–∞: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå Python –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def test_java_backend():
    """–¢–µ—Å—Ç Java –±—ç–∫–µ–Ω–¥–∞"""
    print("‚òï –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Java –±—ç–∫–µ–Ω–¥–∞...")
    
    url = "http://localhost:8080/notifications/send"
    data = {
        "username": "testuser",
        "serviceName": "Quick Test Service via Java",
        "serviceUrl": "https://example.com",
        "status": "down",
        "severity": "ERROR",
        "message": "üö® –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ Java - —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
    }
    
    try:
        response = requests.post(url, json=data, timeout=10)
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ Java –±—ç–∫–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                return True
            else:
                print(f"‚ùå Java –±—ç–∫–µ–Ω–¥ –æ—à–∏–±–∫–∞: {result.get('error')}")
                return False
        else:
            print(f"‚ùå Java –±—ç–∫–µ–Ω–¥ HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Java –±—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def check_services():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    services = [
        ("Python Bot", "http://localhost:5000/health"),
        ("Java Backend", "http://localhost:8080/notifications/channels")
    ]
    
    available = []
    for name, url in services:
        try:
            response = requests.get(url, timeout=3)
            if response.status_code in [200, 201]:
                print(f"‚úÖ {name} –¥–æ—Å—Ç—É–ø–µ–Ω")
                available.append(name)
            else:
                print(f"‚ùå {name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP {response.status_code})")
        except:
            print(f"‚ùå {name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    return available

def main():
    print("üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π PingTower")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    available = check_services()
    print()
    
    if not available:
        print("‚ùå –ù–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("   - Python –±–æ—Ç –∑–∞–ø—É—â–µ–Ω: python bot/monitoring_bot.py")
        print("   - Java –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω: ./gradlew bootRun")
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    python_ok = False
    java_ok = False
    
    if "Python Bot" in available:
        python_ok = test_python_bot()
        print()
    
    if "Java Backend" in available:
        java_ok = test_java_backend()
        print()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   Python Bot: {'‚úÖ' if python_ok else '‚ùå'}")
    print(f"   Java Backend: {'‚úÖ' if java_ok else '‚ùå'}")
    
    if python_ok or java_ok:
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram: https://t.me/PingTower_tax_bot")
    else:
        print("\n‚ùå –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")

if __name__ == "__main__":
    main()
