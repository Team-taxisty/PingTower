import requests
import json
import time

def test_notification():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–æ—Ç"""
    
    url = "http://localhost:5000/send_notification"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "username": "testuser",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥–∏–Ω
        "service_name": "Test Web Server",
        "service_url": "https://example.com",
        "status": "down", 
        "message": "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    }
    
    try:
        print("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
        response = requests.post(url, json=test_data, timeout=5)
        
        if response.status_code == 200:
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram: https://t.me/PingTower_tax_bot")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_notification_via_java():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Java –±—ç–∫–µ–Ω–¥"""
    
    url = "http://localhost:8080/notifications/send"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Java –±—ç–∫–µ–Ω–¥–∞
    test_data = {
        "username": "testuser",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥–∏–Ω
        "serviceName": "Test Web Server via Java",
        "serviceUrl": "https://example.com",
        "status": "down", 
        "severity": "ERROR",
        "message": "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Java –±—ç–∫–µ–Ω–¥ - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    }
    
    try:
        print("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Java –±—ç–∫–µ–Ω–¥...")
        response = requests.post(url, json=test_data, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ Java!")
                print(f"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram: https://t.me/PingTower_tax_bot")
                print(f"üìä Delivery ID: {result.get('delivery_id')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
        else:
            print(f"‚ùå HTTP Error {response.status_code}: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Java –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞"""
    try:
        response = requests.get("http://localhost:5000/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.json()}")
        else:
            print("‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PingTower Notifications")
    print("-" * 40)
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1Ô∏è‚É£ –ü—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ Python –±–æ—Ç—É")
    print("2Ô∏è‚É£ –ß–µ—Ä–µ–∑ Java –±—ç–∫–µ–Ω–¥")
    print("3Ô∏è‚É£ –û–±–∞ —Å–ø–æ—Å–æ–±–∞")
    print("4Ô∏è‚É£ –¢–æ–ª—å–∫–æ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
    
    if choice == "1":
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Python –±–æ—Ç...")
        test_health()
        print()
        test_notification()
    elif choice == "2":
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Java –±—ç–∫–µ–Ω–¥...")
        test_notification_via_java()
    elif choice == "3":
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–æ–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤...")
        print("\n--- Python Bot ---")
        test_health()
        print()
        test_notification()
        print("\n--- Java Backend ---")
        test_notification_via_java()
    elif choice == "4":
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ Telegram...")
        test_health()
        print()
        test_notification()
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.")
