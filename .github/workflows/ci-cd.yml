name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
     
    - name: Build Backend
      run: |
        cd backend
        chmod +x gradlew
        ./gradlew build -x test
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Build Frontend (ignore warnings)
      run: |
        cd frontend/ping-tower
        npm ci
        CI=false npm run build
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Build Bot
      run: |
        cd bot
        pip install --upgrade pip
        pip install -r requirements.txt
        python -m py_compile monitoring_bot.py
        echo "‚úÖ Bot build successful!"
        
    - name: Build Success
      run: echo "‚úÖ All components built successfully!"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: 203.81.208.67
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 300s
        script: |
          cd /opt/data/pingtower
          git pull origin main
          cd docker
          docker compose down || true
          docker compose up -d --build
          
          # Wait for all services including bot
          sleep 30
          
          # Check bot is running
          bot_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/bot/health || echo "000")
          
          if [ "$bot_status" = "200" ]; then
            # Send deployment notification via bot
            curl -X POST http://localhost/bot/send_notification \
              -H "Content-Type: application/json" \
              -d '{
                "service_name": "üöÄ PingTower Deployment",
                "status": "up",
                "service_url": "http://203.81.208.67",
                "message": "All services deployed successfully! üéâ\n\n‚úÖ Backend\n‚úÖ Frontend\n‚úÖ Bot API\n\nCommit: ${{ github.sha }}\nAuthor: ${{ github.actor }}",
                "timestamp": "'$(date)'"
              }' || echo "Bot notification failed"
          else
            echo "‚ö†Ô∏è Bot not responding, notification skipped"
          fi
          
          echo "‚úÖ PingTower deployed successfully!"
          docker compose ps
