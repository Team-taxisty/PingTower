server {
    listen 80;
    server_name _;  

    # Логи для отладки
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Настройки буферов для прокси (чтобы избежать записи на диск для больших файлов и улучшить производительность при нескольких пользователях)
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Включение gzip для сжатия статических файлов (улучшает скорость загрузки)
    gzip on;
    gzip_types text/plain application/javascript image/png application/x-javascript text/css;

    # Увеличьте количество worker-процессов и соединений для лучшей обработки нескольких пользователей
    # Добавьте это в /etc/nginx/nginx.conf (вне блока server), если не указано
    # worker_processes auto;
    # events { worker_connections 2048; }

    # Frontend - Прокси на статические файлы React
    location / {
        proxy_pass http://pingtower-frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Увеличенные таймауты для обработки нескольких пользователей
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Backend API - Прокси на Spring Boot (/v1/)
    location /v1/ {
        proxy_pass http://pingtower-backend:8080/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Объединённая обработка CORS
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Увеличенные таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Маршрут совместимости API (/api/ -> /v1/api/)
    location /api/ {
        proxy_pass http://pingtower-backend:8080/v1/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Те же CORS-заголовки
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Увеличенные таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Bot API - Раскомментируйте, если нужно (с унифицированными настройками)
    # location /bot/ {
    #     proxy_pass http://pingtower-bot:5000/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     
    #     # Объединённая обработка CORS
    #     add_header Access-Control-Allow-Origin * always;
    #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    #     add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    #     
    #     if ($request_method = 'OPTIONS') {
    #         return 204;
    #     }
    #     
    #     # Увеличенные таймауты
    #     proxy_connect_timeout 60s;
    #     proxy_send_timeout 60s;
    #     proxy_read_timeout 60s;
    # }

    # Эндпоинт проверки здоровья
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}
