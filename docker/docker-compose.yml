version: '3.8'

services:
  # PostgreSQL для хранения данных мониторинга
  postgres:
    image: postgres:15-alpine
    container_name: pingtower-postgres
    ports: ["5433:5432"]
    environment:
      POSTGRES_DB: monitoring
      POSTGRES_USER: monitoring
      POSTGRES_PASSWORD: dev123
    volumes:
      # инициализация БД
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U monitoring -d monitoring"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pingtower-network

  # ClickHouse для аналитики и временных рядов
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: pingtower-clickhouse
    ports: ["8123:8123"]
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      # Проверка доступности через HTTP ping endpoint
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pingtower-network

  # MailHog для тестирования email уведомлений
  mailhog:
    image: mailhog/mailhog:latest
    container_name: pingtower-mailhog
    ports: 
      - "1025:1025"  # SMTP порт для отправки писем
      - "8025:8025"  # Web UI для просмотра писем
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pingtower-network

  # Backend Spring Boot приложение
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: pingtower-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/monitoring
      SPRING_DATASOURCE_USERNAME: monitoring
      SPRING_DATASOURCE_PASSWORD: dev123
      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: 1025
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pingtower-network

  # Frontend приложение (пока заглушка)
  frontend:
    image: nginx:alpine
    container_name: pingtower-frontend
    volumes:
      - ../frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - pingtower-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: pingtower-nginx
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pingtower-network

volumes:
  postgres_data:
  clickhouse_data:

networks:
  pingtower-network:
    driver: bridge
